From 4fee8ca6e9149e351f41fec8c8485251e38b275a Mon Sep 17 00:00:00 2001
From: Andiry Xu <jix024@cs.ucsd.edu>
Date: Fri, 10 Feb 2017 12:42:21 -0800
Subject: [PATCH 5/6] Add dax_cow method to x86 fault handler

Signed-off-by: Andiry Xu <jix024@cs.ucsd.edu>
---
 arch/x86/mm/fault.c | 12 ++++++++++++
 include/linux/mm.h  |  2 ++
 2 files changed, 14 insertions(+)

diff --git a/arch/x86/mm/fault.c b/arch/x86/mm/fault.c
index e3254ca..664a49e 100644
--- a/arch/x86/mm/fault.c
+++ b/arch/x86/mm/fault.c
@@ -1382,6 +1382,18 @@ __do_page_fault(struct pt_regs *regs, unsigned long error_code,
 	 * we can handle it..
 	 */
 good_area:
+
+	if (error_code & PF_WRITE) {
+		/* write, present and write, not present: */
+		if (unlikely(!(vma->vm_flags & VM_WRITE))) {
+			if (vma->vm_ops && vma->vm_ops->dax_cow) {
+				up_read(&mm->mmap_sem);
+				vma->vm_ops->dax_cow(vma);
+				down_read(&mm->mmap_sem);
+			}
+		}
+	}
+
 	if (unlikely(access_error(error_code, vma))) {
 		bad_area_access_error(regs, error_code, address, vma);
 		return;
diff --git a/include/linux/mm.h b/include/linux/mm.h
index fe6b403..87a9285 100644
--- a/include/linux/mm.h
+++ b/include/linux/mm.h
@@ -389,6 +389,8 @@ struct vm_operations_struct {
 	 */
 	struct page *(*find_special_page)(struct vm_area_struct *vma,
 					  unsigned long addr);
+	/* For NOVA DAX-mmap protection */
+	int (*dax_cow)(struct vm_area_struct * area);
 };
 
 struct mmu_gather;
-- 
2.7.4

